name: Deploy

on:
  push:
    branches: [master]

jobs:
    package:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }} üîß
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Yarn Install üîß
      run: yarn install
    - name: Production Build üî®
      run: yarn build
    - name: Upload package ‚¨Ü
      uses: actions/upload-artifact@v1
      with:
        name: package
        path: build/
      
  deploy-to-stage:
    runs-on: ubuntu-latest
    needs: [package]
    steps:
    - name: Download package ‚¨á
      uses: actions/download-artifact@v1
      with:
        name: package
    - name: Deploy to S3 üöÄ
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.STAGE_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.STAGE_SECRET_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGE_SECRET_KEY }}
        AWS_REGION: ${{ secrets.STAGE_REGION }}
        SOURCE_DIR: "package"

  deploy-to-prod-1:
    runs-on: ubuntu-latest
    needs: [end-to-end-test]
    steps:
    - name: Download package ‚¨á
      uses: actions/download-artifact@v1
      with:
        name: package
    - name: Deploy to S3 üöÄ
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.PROD_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.PROD_SECRET_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_SECRET_KEY }}
        AWS_REGION: ${{ secrets.PROD_REGION }}
        SOURCE_DIR: "package"
       
